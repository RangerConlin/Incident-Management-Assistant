"""Pydantic models for ICS-214 API."""
from __future__ import annotations

from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel, Field

class StreamBase(BaseModel):
    incident_id: str
    name: str
    op_number: int = 0
    kind: Optional[str] = None
    section: Optional[str] = None

class StreamCreate(StreamBase):
    pass

class StreamUpdate(BaseModel):
    name: Optional[str] = None
    op_number: Optional[int] = None
    kind: Optional[str] = None
    section: Optional[str] = None

class StreamRead(StreamBase):
    id: str
    created_at: datetime
    updated_at: datetime

class EntryBase(BaseModel):
    text: str
    timestamp_utc: datetime | None = None
    critical_flag: bool = False
    tags: List[str] = Field(default_factory=list)
    source: str = "manual"
    actor_user_id: Optional[str] = None

class EntryCreate(EntryBase):
    pass

class EntryRead(EntryBase):
    id: str
    stream_id: str
    autogenerated: bool
    idempotency_hash: str

class EntryUpdate(BaseModel):
    text: Optional[str] = None
    critical_flag: Optional[bool] = None
    tags: Optional[List[str]] = None

class ExportRequest(BaseModel):
    include_auto: bool = True
    include_attachments: bool = False

class ExportRead(BaseModel):
    id: str
    file_path: str
    created_at: datetime
